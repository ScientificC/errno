INCLUDE_DIRECTORIES(../.)
INCLUDE_DIRECTORIES(../include)

SET(ERRNO_SUBDIRS
	errno
)

IF(NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE Release)
	MESSAGE(STATUS "No CMAKE_BUILD_TYPE specified, using default RELEASE")
ENDIF()
MESSAGE(STATUS "Built type is set to ${CMAKE_BUILD_TYPE}")

IF(CMAKE_COMPILER_IS_WINDOWS)
	SET(CMAKE_DEBUG_POSTFIX d)
ENDIF()

# unit tests do not use strict-prototypes, so this is here
IF(CMAKE_COMPILER_IS_GNUC OR CMAKE_COMPILER_IS_CLANG)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wstrict-prototypes")
ENDIF()

SET(CMAKE_POSITION_INDEPENDENT_CODE ON)

foreach(subdir ${ERRNO_SUBDIRS})
    add_subdirectory(${subdir})
    set(ERRNO_LIB_SRCS ${ERRNO_LIB_SRCS} $<TARGET_OBJECTS:${subdir}>)
endforeach()

OPTION(ERRNO_BUILD_STATIC "Build static library" ON)
IF(ERRNO_BUILD_STATIC)
	ADD_LIBRARY(scicerrno_static STATIC ${ERRNO_LIB_SRCS})
	SET_TARGET_PROPERTIES(scicerrno_static PROPERTIES LINKER_LANGUAGE C)
	if(CMAKE_COMPILER_IS_GNUC)
		SET_TARGET_PROPERTIES(scicerrno_static PROPERTIES OUTPUT_NAME "scicerrno")
	endif()
	list(APPEND ERRNO_LIB_TARGET scicerrno_static)
	SET_TARGET_PROPERTIES(scicerrno_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
	IF(APPLE)
		SET_TARGET_PROPERTIES(scicerrno_static PROPERTIES MACOSX_RPATH ON)
	ENDIF()
ENDIF()


OPTION(ERRNO_BUILD_SHARED "Build shared library" ON)
IF(ERRNO_BUILD_SHARED)
	ADD_LIBRARY(scicerrno SHARED ${ERRNO_LIB_SRCS})
	SET_TARGET_PROPERTIES(scicerrno PROPERTIES LINKER_LANGUAGE C)
	SET_TARGET_PROPERTIES(scicerrno PROPERTIES VERSION ${PROJECT_VERSION})
	#SET_TARGET_PROPERTIES(scicerrno PROPERTIES SOVERSION 1)
	list(APPEND ERRNO_LIB_TARGET scicerrno)
	SET_TARGET_PROPERTIES(scicerrno PROPERTIES CLEAN_DIRECT_OUTPUT 1)
	IF(LINUX)
		# shared library should link to libm
		FIND_LIBRARY(M_LIB m)
		TARGET_LINK_LIBRARIES(scicerrno ${M_LIB})
	ENDIF()
	IF(APPLE)
		SET_TARGET_PROPERTIES(scicerrno PROPERTIES MACOSX_RPATH ON)
	ENDIF()
	#IF(CMAKE_COMPILER_IS_WINDOWS)
	#	SET_TARGET_PROPERTIES(scicerrno PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
	#ENDIF()
ENDIF()


IF(NOT ERRNO_BUILD_STATIC AND NOT ERRNO_BUILD_SHARED)
	MESSAGE(FATAL_ERROR "Both shared and static libraries are disabled. Please specify one or the other or both.")
ENDIF(NOT ERRNO_BUILD_STATIC AND NOT ERRNO_BUILD_SHARED)

IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET(LIB_SUFFIX "64")
ENDIF()

INSTALL(TARGETS ${ERRNO_LIB_TARGET}
		RUNTIME DESTINATION bin
		LIBRARY DESTINATION lib
		ARCHIVE DESTINATION lib
		)
